/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        
            combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };
        
                    combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };
        
                           combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };
        
        
           combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
        

        
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R &kp T 						&kp Y &kp U  &kp I    &kp O   &kp P 
		&kp A &kp S &kp D &kp F &kp G 			        	        &kp H &kp J &kp K &kp L &kp QUOT
		&mt LSFT Z &mt LALT X &kp C &kp V &kp B				        &kp N &kp M  &kp CMMA &mt RALT DOT &mt RSFT FSLH
          				&mo 1 &kp LGUI  				&kp RCTL &mt 2 SPC 
		>;
		};

       		left_layer {
		bindings = <
		&kp TAB &kp KP_PLUS &kp KP_MINUS    &kp KP_MULTIPLY    &kp KP_DIVIDE    &kp PLUS &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp BKSP 
		&kp ESC    &kp TILDE    &kp DLLR      &kp PRCT     &kp CRRT 		&kp MINUS &kp NUM_4  &kp NUM_5 &kp NUM_6  &kp RET 
		&kp KP_NLCK    &kp K_PREV 	&kp K_PP &kp K_NEXT  &kp KP_DOT 	&kp ASTRK &kp NUM_1 &kp NUM_2 &kp NUM_3  &kp EQL 
					    &mo 1  &trans  					    &kp RCTL &mt 2 SPC 
		>;
		};
		
		right_layer {
		bindings = <
		&kp TAB  &kp BANG &kp UNDER  &kp LBKT  &kp RBKT    			&kp CRRT  &kp AMPS &kp KMLT &kp LPRN &kp BKSP 
		&kp ESC  &kp COLON  &kp SEMI  &kp LBRC  &kp RBRC 			&kp AMPS &kp HASH  &kp PIPE  &kp BSLH   &kp ENTER
		&kp LSFT  &kp GRAVE &kp AT &kp LPAR   &kp RPAR    			&kp UNDER &kp K_MUTE &kp K_VOL_UP &kp K_VOL_DN  &kp RSFT
					  &mo 1 &kp LGUI  				&trans &mt 2 SPC 
		>;
		};	
		
		tri_layer {
		bindings = <
		&kp F1  &kp F2    &kp F3    &kp F4    &kp F5 			&kp F6 &kp F7 &kp F8 &kp F9 &kp F10
		&kp F11 &trans &trans &trans &trans                     &kp LEFT &kp DOWN  &kp UP &kp RIGHT &kp F12 
		&trans &trans &trans &trans &trans                      &trans &kp PG_DN  &kp PG_UP  &trans &trans   
					 &mo 1 &trans  					&trans &mo 2 
		>;
		};	
        
	};
};
